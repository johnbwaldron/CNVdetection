#Rterm.exe --vanilla

library("nnls")
library("Hmisc")
library("mgcv")
library("plyr")

# load xcnvs
    #xcnvs <- read.table(file="https://raw.githubusercontent.com/johnbwaldron/CNVdetection/master/xcnvsLCRC7.16.18withSampleNames.csv",  header = TRUE, stringsAsFactors = FALSE, sep=",")
    #xcnvs$SAMPLE <- paste("GELCC.", xcnvs$SAMPLE, sep="")
    #write.table(xcnvs, file="C:/Users/Public/addedGELCC.toSamplesInXcnvs.csv", row.names=FALSE, quote=TRUE, sep=",")
xcnvs <- read.table(file="https://raw.githubusercontent.com/johnbwaldron/CNVdetection/master/addedGELCC.toSamplesInXcnvs.csv",  header = TRUE, stringsAsFactors = FALSE, sep=",")
   
#create vector of sample names
sample.names <- as.vector(unique(xcnvs$SAMPLE))
CNVnums <- data.frame(SAMPLE=sample.names)

#tally up the number of calls per sample # Maybe I could do this with an sapply/lapply, but i'm not sure how...
for(i in sample.names){
CNVnums$CNVs[which(CNVnums$SAMPLE==i)] <- length(which(xcnvs==i))
}

# first, is the data normaly distributed? ...the answer is NO, not even close...and accordingly, the mean is 4 times the median. 
#as a result, I think is it most reasonable to remove those samples that are greater than the MEDIAN + 2 times the interquartile range
shapiro.test(CNVnums$CNVs)

# calculate IQR
interquart <- IQR(CNVnums$CNVs)
med <- median(CNVnums$CNVs)

QCsample.names <- as.vector(CNVnums[which(CNVnums$CNVs<= med+2*interquart),1])

#read in CANOES functions
source("https://raw.githubusercontent.com/johnbwaldron/CNVdetection/master/CANOES.R")

#load CANOES.reads 
    #gc <- read.table("https://raw.githubusercontent.com/johnbwaldron/genes/master/lungcancerwes81616.gc.txt")$V2
    #canoes.reads <- read.table("C:/Users/Public/GELCC_204samples_canoes.reads.txt")
    #canoes.reads <- canoes.reads[,-4]
    ##rename columns 5 and onward with sample names:
    ## bam name only in CANOES run order found here: "https://raw.githubusercontent.com/johnbwaldron/genes/master/bamNameOnly.tsv"
    #sample.names <- read.table("https://raw.githubusercontent.com/johnbwaldron/CNVdetection/master/bamNameOnly.tsv", row.names="V1")
    #sample.names <- rownames(sample.names)
    #names(canoes.reads) <- c("chromosome", "start", "end", sample.names)
    ##create a vector of consecutive target/probe ids
    #target <- seq(1, nrow(canoes.reads))
    ##cbind it all into one dataframe
    #canoes.reads <- cbind(target, gc, canoes.reads)
    # write.table(canoes.reads, file="C:/Users/Public/corrected_GELCC_203samples_canoes.reads.tsv", col.names=TRUE, sep="\t")
canoes.reads <- read.table("C:/Users/Public/corrected_GELCC_203samples_canoes.reads.tsv", sep="\t")

counts <- subset(canoes.reads, !chromosome %in% c("chrX", "chrY", "X", "Y"))
counts$chromosome <- as.numeric(counts$chromosome) # otherwise, the chromosomes are factors and the statistic functions aren't relevant

#CHECK FOR ANY PROBLEMS BETWEEN COUNTS AND SAMPLE.BEFORE RUNNING #setdiff(c(1:10),seq(1,10, by=2))
setdiff(QCsample.names, colnames(counts))

#Call CNVs on QC subset of samples CANOES
xcnv.list <- vector('list', length(QCsample.names))

# call CNVs in each sample
for (i in 1:length(QCsample.names)){
    xcnv.list[[i]] <- CallCNVs(QCsample.names[i], counts)
  }

# combine the results into one data frame
xcnvs <- do.call('rbind', xcnv.list)

#save file
# Mandal Lab: write.table(xcnvs, file="C:/Users/jwaldr/Desktop/GELCCdata/QCxcnvs.csv", row.names=FALSE, quote=TRUE, sep=",")
#Waldron Residence
write.table(xcnvs, file="C:/Users/Public/afterQCXcnvs.csv", row.names=FALSE, quote=TRUE, sep=",")

